<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="7" passed="6" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-04-20T14:59:26 IST" name="FullECommerceSuite" finished-at="2025-04-20T14:59:55 IST" duration-ms="28402">
    <groups>
    </groups>
    <test started-at="2025-04-20T14:59:26 IST" name="SmokeSuite" finished-at="2025-04-20T14:59:55 IST" duration-ms="28402">
      <class name="test.ProductTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:test.ProductTest@74e52ef6]" started-at="2025-04-20T14:59:35 IST" name="setup" finished-at="2025-04-20T14:59:37 IST" duration-ms="1243" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testPurchaseFlow()[pri:0, instance:test.ProductTest@74e52ef6]" started-at="2025-04-20T14:59:37 IST" name="testPurchaseFlow" finished-at="2025-04-20T14:59:41 IST" duration-ms="3983" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPurchaseFlow -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:test.ProductTest@74e52ef6]" started-at="2025-04-20T14:59:41 IST" name="teardown" finished-at="2025-04-20T14:59:41 IST" duration-ms="83" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPurchaseFlow status=SUCCESS method=ProductTest.testPurchaseFlow()[pri:0, instance:test.ProductTest@74e52ef6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- test.ProductTest -->
      <class name="test.LoginTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:test.LoginTest@4116aac9]" started-at="2025-04-20T14:59:30 IST" name="setup" finished-at="2025-04-20T14:59:31 IST" duration-ms="1170" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testLogin()[pri:0, instance:test.LoginTest@4116aac9]" started-at="2025-04-20T14:59:31 IST" name="testLogin" finished-at="2025-04-20T14:59:34 IST" duration-ms="2522" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:test.LoginTest@4116aac9]" started-at="2025-04-20T14:59:34 IST" name="teardown" finished-at="2025-04-20T14:59:34 IST" duration-ms="87" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLogin status=SUCCESS method=LoginTest.testLogin()[pri:0, instance:test.LoginTest@4116aac9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- test.LoginTest -->
      <class name="test.SignupTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:test.SignupTest@4afcd809]" started-at="2025-04-20T14:59:26 IST" name="setup" finished-at="2025-04-20T14:59:28 IST" duration-ms="1888" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testSignupFunctionality()[pri:0, instance:test.SignupTest@4afcd809]" started-at="2025-04-20T14:59:28 IST" name="testSignupFunctionality" finished-at="2025-04-20T14:59:30 IST" duration-ms="1712" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSignupFunctionality -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:test.SignupTest@4afcd809]" started-at="2025-04-20T14:59:30 IST" name="teardown" finished-at="2025-04-20T14:59:30 IST" duration-ms="89" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSignupFunctionality status=SUCCESS method=SignupTest.testSignupFunctionality()[pri:0, instance:test.SignupTest@4afcd809] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- test.SignupTest -->
      <class name="test.CartTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:test.CartTest@6ed3ccb2]" started-at="2025-04-20T14:59:41 IST" name="setup" finished-at="2025-04-20T14:59:42 IST" duration-ms="1899" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testDeleteCartItem()[pri:0, instance:test.CartTest@6ed3ccb2]" started-at="2025-04-20T14:59:42 IST" name="testDeleteCartItem" finished-at="2025-04-20T14:59:47 IST" duration-ms="4701" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteCartItem -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:test.CartTest@6ed3ccb2]" started-at="2025-04-20T14:59:47 IST" name="teardown" finished-at="2025-04-20T14:59:47 IST" duration-ms="79" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testDeleteCartItem status=SUCCESS method=CartTest.testDeleteCartItem()[pri:0, instance:test.CartTest@6ed3ccb2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- test.CartTest -->
      <class name="test.LogoutTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:test.LogoutTest@15de0b3c]" started-at="2025-04-20T14:59:53 IST" name="setup" finished-at="2025-04-20T14:59:54 IST" duration-ms="1297" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testlogout()[pri:0, instance:test.LogoutTest@15de0b3c]" started-at="2025-04-20T14:59:54 IST" name="testlogout" finished-at="2025-04-20T14:59:55 IST" duration-ms="651" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//button[text()='Login']"}
  (Session info: chrome=135.0.7049.96)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.29.0', revision: '5fc1ec94cb'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [b2379b3e049e706914b1928f051cb90b, findElement {value=//button[text()='Login'], using=xpath}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 135.0.7049.96, chrome: {chromedriverVersion: 135.0.7049.95 (de2eb485a195..., userDataDir: C:\Users\ADMIN\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:51030}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:51030/devtoo..., se:cdpVersion: 135.0.7049.96, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: b2379b3e049e706914b1928f051cb90b]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//button[text()='Login']"}
  (Session info: chrome=135.0.7049.96)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.29.0', revision: '5fc1ec94cb'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [b2379b3e049e706914b1928f051cb90b, findElement {value=//button[text()='Login'], using=xpath}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 135.0.7049.96, chrome: {chromedriverVersion: 135.0.7049.95 (de2eb485a195..., userDataDir: C:\Users\ADMIN\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:51030}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:51030/devtoo..., se:cdpVersion: 135.0.7049.96, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: b2379b3e049e706914b1928f051cb90b
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at test.LogoutTest.testlogout(LogoutTest.java:27)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testlogout -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:test.LogoutTest@15de0b3c]" started-at="2025-04-20T14:59:55 IST" name="teardown" finished-at="2025-04-20T14:59:55 IST" duration-ms="223" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testlogout status=FAILURE method=LogoutTest.testlogout()[pri:0, instance:test.LogoutTest@15de0b3c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- test.LogoutTest -->
      <class name="test.PurchaseTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:test.PurchaseTest@1a677343]" started-at="2025-04-20T14:59:47 IST" name="setup" finished-at="2025-04-20T14:59:49 IST" duration-ms="1500" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testPurchaseFlow()[pri:0, instance:test.PurchaseTest@1a677343]" started-at="2025-04-20T14:59:49 IST" name="testPurchaseFlow" finished-at="2025-04-20T14:59:53 IST" duration-ms="3817" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPurchaseFlow -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:test.PurchaseTest@1a677343]" started-at="2025-04-20T14:59:53 IST" name="teardown" finished-at="2025-04-20T14:59:53 IST" duration-ms="96" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPurchaseFlow status=SUCCESS method=PurchaseTest.testPurchaseFlow()[pri:0, instance:test.PurchaseTest@1a677343] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- test.PurchaseTest -->
      <class name="test.CategoryTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:test.CategoryTest@62ddbd7e]" started-at="2025-04-20T14:59:34 IST" name="setup" finished-at="2025-04-20T14:59:35 IST" duration-ms="1171" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testCategoryDisplay()[pri:0, instance:test.CategoryTest@62ddbd7e]" started-at="2025-04-20T14:59:35 IST" name="testCategoryDisplay" finished-at="2025-04-20T14:59:35 IST" duration-ms="78" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCategoryDisplay -->
        <test-method is-config="true" signature="teardown(org.testng.ITestResult)[pri:0, instance:test.CategoryTest@62ddbd7e]" started-at="2025-04-20T14:59:35 IST" name="teardown" finished-at="2025-04-20T14:59:35 IST" duration-ms="72" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCategoryDisplay status=SUCCESS method=CategoryTest.testCategoryDisplay()[pri:0, instance:test.CategoryTest@62ddbd7e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- test.CategoryTest -->
    </test> <!-- SmokeSuite -->
  </suite> <!-- FullECommerceSuite -->
</testng-results>
